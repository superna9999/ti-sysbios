%%{ 
/*
 * Copyright (c) 2012, Texas Instruments Incorporated
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 *
 * *  Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 *
 * *  Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 *
 * *  Neither the name of Texas Instruments Incorporated nor the names of
 *    its contributors may be used to endorse or promote products derived
 *    from this software without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
 * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO,
 * THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
 * PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR
 * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
 * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
 * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
 * OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
 * WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
 * OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,
 * EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 * 
*/
%%}
%/*
% *  ======== Hwi.xdt ========
% *
% *! Revision History
% *! ================
% *! 18-May-2011 kw     reviewed and bc-merged family.c64p changes back into
% *!                    this file and re-enabled 64x (SDOCM00081066)
% *! 30-Jun-2008 agd    SDSCM00026624 bogus reset vector
% *! 16-May-2007 agd    SDSCM00016398 (Hwi_plug rework)
% *! 09-May-2007 agd    Hwi refactor SDSCM00016399,SDSCM00016499,SDSCM00016747
% */
%/*
% * Do not generate the vector table if this is a ROM assembly.
% */
%if (!Program.$$isrom) {

%/* Interrupt vector table */
asm("           .sect \".vecs\"         ");
asm("           .align 0x400            ");
%var Hwi = xdc.module("ti.sysbios.family.c64.Hwi");
%//print("Generating c64 interrupt vector table.");
%var len = Hwi.interrupt.length;
%var cname, iname;
%for (var i = 0; i < len; i++) {
%    iname = Hwi.interrupt[i].name;
%    if (iname == "")  {
%        iname = Program.build.target.asmName("ti_sysbios_family_c64_Hwi" + i);
%    }
%    else {
%        iname = Program.build.target.asmName(iname.substr(0));
%    }
%    if (Hwi.interrupt[i].useDispatcher) {
%       cname = Program.build.target.asmName("ti_sysbios_family_c64_Hwi_dispatchAlways");
%    }
%    else {
%       cname = String(Hwi.interrupt[i].pfxn);
%       if (cname == "null")  {
%           cname = iname;
%       }
%       else {
%           cname = Program.build.target.asmName(cname.substr(1));
%       }
%    }
%
asm("           .global `iname`         ");
asm("           .global `cname`         ");
asm("`iname`:                           ");
%    if (i == 0) {
asm("           nop                     ");
asm("           nop                     ");
asm("           nop                     ");
asm("           mvkl    `cname`, b0     ");
asm("           mvkh    `cname`, b0     ");
asm("           b       b0              ");
asm("           nop                     ");
asm("           nop     4               ");
%    }
%    else {
asm("           stw     b0, *b15--      ");
asm("           mvk     `i`, b0         ");
asm("           stw     b0, *b15        ");
asm("           mvkl    `cname`, b0     ");
asm("           mvkh    `cname`, b0     ");
asm("           b       b0              ");
asm("           ldw     *++b15, b0      ");
asm("           nop     4               ");
%    }

%}
%if (Hwi.resetVectorAddress !== undefined) {
%    cname = String(Hwi.interrupt[0].pfxn);
%    if (cname.substr(1) == "c_int00") {
%	 /* c_int00 is special -- it has leading '_' for ELF and COFF */
%	 cname = "_" + "c_int00";
%    }
%    else {
%        cname = Program.build.target.asmName(cname.substr(1));
%    }
asm("           .sect \".resetVector\"         ");
asm("           nop                     ");
asm("           nop                     ");
asm("           nop                     ");
asm("           mvkl    `cname`, b0     ");
asm("           mvkh    `cname`, b0     ");
asm("           b       b0              ");
asm("           nop                     ");
asm("           nop     4               ");
%}

%} /* (!Program.$$isrom) */

%%{
/*
 * @(#) ti.sysbios.family.c64; 2, 0, 0, 0,556; 5-18-2012 06:04:46; /db/vtree/library/trees/avala/avala-q37x/src/ xlibrary

 */

%%}
