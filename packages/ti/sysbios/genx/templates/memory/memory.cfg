/*
 *  Copyright 2012 by Texas Instruments Incorporated.
 *
 */

/*
 *  ======== memory.cfg ========
 *
 */
/*
 * Include file that helps minimize code and data footprint. Uncomment
 * one of the following lines based on sizing requirements.
 */
//xdc.includeFile("sizingBasic.cfg.xs");
//xdc.includeFile("sizingMinimal.cfg.xs");

var System = xdc.useModule('xdc.runtime.System');
var SysMin = xdc.useModule('xdc.runtime.SysMin');
var LoggerBuf = xdc.useModule('xdc.runtime.LoggerBuf');
var Main = xdc.useModule('xdc.runtime.Main');
var Defaults = xdc.useModule('xdc.runtime.Defaults');
var Diags = xdc.useModule('xdc.runtime.Diags');
var Memory = xdc.useModule('xdc.runtime.Memory');

var BIOS = xdc.useModule('ti.sysbios.BIOS');
var Hwi = xdc.useModule('ti.sysbios.hal.Hwi');
var HeapMem = xdc.useModule('ti.sysbios.heaps.HeapMem');
var HeapBuf = xdc.useModule('ti.sysbios.heaps.HeapBuf');
var Task = xdc.useModule('ti.sysbios.knl.Task');
var Idle = xdc.useModule('ti.sysbios.knl.Idle');

/* 
 * The BIOS module will create the default heap for the system.
 * Specify the size of this default heap.
 */
BIOS.heapSize = 0x2000;

/* 
 * Create and install logger for the whole system
 */
var loggerBufParams = new LoggerBuf.Params();
loggerBufParams.numEntries = 32;
var logger0 = LoggerBuf.create(loggerBufParams);
Defaults.common$.logger = logger0;
Main.common$.diags_INFO = Diags.ALWAYS_ON;

/* Configure SysMin to send System_printfs to standard out */
System.SupportProxy = SysMin;

/* Create two heaps to be used by two separate tasks for alloc and free. */
var heapBufParams = new HeapBuf.Params;
heapBufParams.blockSize = 128;
heapBufParams.numBlocks = 2;
heapBufParams.align = 8;
heapBufParams.sectionName = "task0Heap";
Program.global.task0Heap = HeapBuf.create(heapBufParams);

var heapMemParams2 = new HeapMem.Params;
heapMemParams2.size = 512;
heapMemParams2.align = 8;
heapMemParams2.sectionName = "task1Heap";
Program.global.task1Heap = HeapMem.create(heapMemParams2);

/* Create the static task */
var taskParams = new Task.Params;
taskParams.stackSection = "task0Stack";
var task0 = Task.create('&task0Fxn', taskParams);

/* Place user sections */
Program.sectMap["systemHeap"] = Program.platform.stackMemory;
Program.sectMap["task0Heap"] = Program.platform.dataMemory;
Program.sectMap["task1Heap"] = Program.platform.dataMemory;
Program.sectMap["task0Stack"] = Program.platform.stackMemory;

/* Add idle function */
Idle.addFunc('&idl0Fxn');
/*
 *  @(#) ti.sysbios.genx; 2, 0, 0, 0,527; 5-18-2012 06:05:28; /db/vtree/library/trees/avala/avala-q37x/src/ xlibrary

 */

