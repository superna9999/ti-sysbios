Purpose:

    This example shows the use of xdc.runtime.Memory module and different
    xdc.runtime.IHeap implementations to manage memory.
    A system heap is created statically using ti.sysbios.heaps.HeapMem.
    This heap is plugged into xdc.runtime.memory as the defaultHeapInstance.
    
    This testcase uses two tasks. One task is statically created and one 
    is dynamically created. Both tasks use xdc.runtime.Memory to allocate
    memory but use different heaps created using different IHeap
    implementations. 
    Task0 uses ti.sysbios.heaps.HeapBuf to statically 
    create its heap (task0Heap) because the allocations in task0 are of 
    a fixed size. 
    Task1 uses ti.sysbios.heaps.HeapMem to statically create its heap 
    (task1Heap) because task1 allocates variable block sizes.
    Both tasks print their heap status before and after allocations.
    
Expected output:
	
    See memory.k file.
